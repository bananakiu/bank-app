{"version":3,"sources":["assets/banner-logo-white.png","components/common/ProfileTab.jsx","components/common/Navbar.jsx","components/dashboard/DashboardPage.jsx","components/accounts/AccountRow.jsx","components/common/Button.jsx","utils/accounts.js","components/common/ErrorDisplay.jsx","components/accounts/AddAccountModal.jsx","components/records/DepositActionPage.jsx","components/records/WithdrawActionPage.jsx","components/records/TransferActionPage.jsx","components/records/ActAccountModal.jsx","components/accounts/AccountsPage.jsx","components/records/RecordRow.jsx","components/records/RecordsPage.jsx","assets/bg-02.jpg","components/login/LoginPage.jsx","components/login/SignUpPage.jsx","utils/login.js","assets/logo-display-white.png","components/login/LandingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProfileTab","setIsProfileTabOpen","setIsDashboardOpen","setIsAccountsOpen","setIsRecordsOpen","setIsLoginOpen","setIsSignupOpen","setIsLandingOpen","setLoggedIn","setLoggedInUser","className","style","top","onClick","page","NavBar","isDashboardOpen","isAccountsOpen","isRecordsOpen","isLoginOpen","isSignupOpen","isLandingOpen","loggedIn","loggedInUser","adminAccounts","useState","isProfileTabOpen","switchPageTo","handleProfileClick","console","log","id","src","bannerLogo","alt","filter","account","username","toLowerCase","firstName","lastName","email","dashboardPage","formatter","Intl","NumberFormat","currency","AccountRow","name","balance","setIsActAccountModalOpen","setActAccountName","format","Button","content","color","hoverColor","otherStyling","onClickFunction","addRecord","records","recordsIdGenerator","type","amount","push","getAccount","accounts","ErrorDisplay","errors","map","error","index","AddAccountModal","setAccounts","idGenerator","setIdGenerator","setRecords","setRecordsIdGenerator","newAccountName","setNewAccountName","newEmail","setNewEmail","setNewAccountType","newAccountType","newInitialAmount","setNewInitialAmount","setIsAddAccountModalOpen","isAddAccountModalOpen","setErrors","isErrorDisplayOpen","setIsErrorDisplayOpen","handleValidation","listOfErrors","includes","length","onSubmit","e","preventDefault","holderName","initialValue","parseInt","addAccount","newAccounts","newIdGenerator","newRecords","newRecordsIdGenerator","value","onChange","target","required","DepositActionPage","action","actDepositAmount","setAction","actAccountName","setActDepositAmount","errorAction","htmlFor","WithdrawActionPage","actWithdrawAmount","setActWithdrawAmount","TransferActionPage","actTransferToAccountName","setActTransferToAccountName","actTransferAmount","setActTransferAmount","list","label","ActAccountModal","isActAccountModalOpen","setErrorAction","checkAccount","amt","parseFloat","deposit","withdraw","emailFrom","emailTo","transfer","AccountsPage","class","RecordRow","RecordsPage","record","LoginPage","setAdminAccounts","usernameLogin","setUsernameLogin","passwordLogin","setPasswordLogin","height","background","bgImage","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","backgroundSize","queriedAccount","password","placeholder","SignUpPage","setFirstName","setLastName","setEmail","setUsername","setPassword","confirmPassword","setConfirmPassword","addAdminAccount","LandingPage","logoDisplay","App","JSON","parse","localStorage","getItem","savedValue","useEffect","setItem","stringify","DashboardPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c6d9ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner-logo-white.2e5b2944.png\";","const ProfileTab = ({\n    setIsProfileTabOpen,\n    setIsDashboardOpen,\n    setIsAccountsOpen,\n    setIsRecordsOpen,\n    setIsLoginOpen,\n    setIsSignupOpen,\n    setIsLandingOpen,\n    setLoggedIn,\n    setLoggedInUser,\n}) => {\n    // handlers/functions\n    const switchPageTo = (page) => {\n        return () => {\n            setIsDashboardOpen(page===\"dashboard\" ? true : false);\n            setIsAccountsOpen(page===\"accounts\" ? true : false);\n            setIsRecordsOpen(page===\"records\" ? true : false);\n            setIsLoginOpen(page===\"login\" ? true : false);\n            setIsSignupOpen(page===\"signup\" ? true : false);\n            setIsLandingOpen(page===\"landing\" ? true : false);\n        }\n    }\n    const handleLogOutClick = () => {\n        setLoggedIn(false);\n        setLoggedInUser(\"\");\n        switchPageTo(\"login\")();\n        setIsProfileTabOpen(false);\n    }\n\n    // render\n    return <div className=\"\n    z-10 absolute right-0\n    w-40\n    rounded-md border-2 shadow-md\n    bg-white\n    \n    \" style={{\n        top: \"3.75rem\",\n    }}>\n        <div className=\"\n        hover:bg-gray-100\n        w-full py-4 px-6\n        text-lg text-center\n        transition duration-200 cursor-pointer\n        \" onClick={handleLogOutClick}>\n            Logout\n        </div>\n    </div>\n};\n\nexport default ProfileTab;","import { useState } from 'react';\nimport bannerLogo from './../../assets/banner-logo-white.png';\nimport ProfileTab from './ProfileTab';\n\nconst NavBar = ({\n    isDashboardOpen,\n    setIsDashboardOpen,\n    isAccountsOpen,\n    setIsAccountsOpen,\n    isRecordsOpen,\n    setIsRecordsOpen,\n    isLoginOpen,\n    setIsLoginOpen,\n    isSignupOpen,\n    setIsSignupOpen,\n    isLandingOpen,\n    setIsLandingOpen,\n    loggedIn,\n    setLoggedIn,\n    loggedInUser,\n    setLoggedInUser,\n    adminAccounts\n}) => {\n    // states\n    const [isProfileTabOpen, setIsProfileTabOpen] = useState(false);\n\n    // handlers\n    const switchPageTo = (page) => {\n        return () => {\n            setIsDashboardOpen(page===\"dashboard\" ? true : false);\n            setIsAccountsOpen(page===\"accounts\" ? true : false);\n            setIsRecordsOpen(page===\"records\" ? true : false);\n            setIsLoginOpen(page===\"login\" ? true : false);\n            setIsSignupOpen(page===\"signup\" ? true : false);\n            setIsLandingOpen(page===\"landing\" ? true : false);\n        }\n    }\n\n    const handleProfileClick = () => {\n        setIsProfileTabOpen(!isProfileTabOpen);\n        console.log(isProfileTabOpen);\n    }\n\n    return <>\n        <nav className=\"\n        fixed z-10\n        flex justify-between items-center\n        w-full py-0 \n        text-white bg-blue-500\n        \">\n            <div id=\"navbar-left\" className=\"flex justify-center items-center\">\n                <div id=\"logo\" className=\"pl-3 cursor-pointer\" onClick={switchPageTo(`${loggedIn === true ? \"accounts\" : \"landing\" }`)}> {/* change default home pages */}\n                    <img src={bannerLogo} alt=\"NextBank logo\" className=\"\n                    h-10 my-0 mr-4\n                    min-w-min\n                    \"/>\n                </div>\n                <div id=\"nav-items-left\" className=\"\n                flex\n                text-center\n                h-full\n                \">\n                    {!loggedIn && <>\n                        <div className=\"flex-1 text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer select-none\" onClick={switchPageTo(\"landing\")}>Home</div>\n                    </>}\n                    {loggedIn && <>\n                        {/* <a className=\"flex-1 text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer\" onClick={switchPageTo(\"dashboard\")}>Dashboard</a> */}\n                        <div className=\"flex-1 text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer select-none\" onClick={switchPageTo(\"accounts\")}>Accounts</div>\n                        <div className=\"flex-1 text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer select-none\" onClick={switchPageTo(\"records\")}>Records</div>\n                    </>}\n                </div>\n            </div>\n            <div id=\"navbar-right\" className=\"flex items-center justify-center\">\n                {!loggedIn && <>\n                    <div id=\"nav-items-right\" className=\"\n                    flex\n                    text-center\n                    h-full\n                    \">\n                        <div className=\"block text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer select-none\" onClick={switchPageTo(\"login\")}>Log In</div>\n                        <div className=\"block text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer select-none\" onClick={switchPageTo(\"signup\")}>Sign Up</div>\n                    </div>\n                </>}\n                {loggedIn && <>\n                    <div id=\"nav-items-right\" className=\"\n                    flex\n                    text-center\n                    h-full\n                    \">\n                        {/* <a className=\"block text-lg hover:bg-blue-600 py-4 px-6 transition duration-200 cursor-pointer\" onClick={handleLogOutClick}>Logout</a> */}\n                        <div onClick={handleProfileClick} \n                        className=\"\n                        flex justify-center items-center\n                        hover:bg-blue-600\n                        py-3 px-6\n                        transition duration-200 cursor-pointer\n                        \">\n                            <i className=\"fas fa-user-circle block text-3xl\" onClick={handleProfileClick}></i>\n                            <div className=\"text-left pl-2\">\n                                <h1 className=\"text-sm select-none\">\n                                    {adminAccounts.filter(account => account.username.toLowerCase()===loggedInUser.toLowerCase())[0].firstName}\n                                    {adminAccounts.filter(account => account.username.toLowerCase()===loggedInUser.toLowerCase())[0].lastName}\n                                </h1>\n                                <h2 className=\"text-xs select-none\">\n                                    {adminAccounts.filter(account => account.username.toLowerCase()===loggedInUser.toLowerCase())[0].email}\n                                </h2>\n                            </div>\n                        </div>\n                    </div>\n                </>}\n            </div>\n        </nav>\n        {/* navbar profile tab */}\n        {\n            isProfileTabOpen && <ProfileTab\n                setIsProfileTabOpen={setIsProfileTabOpen} \n                setIsDashboardOpen={setIsDashboardOpen}\n                setIsAccountsOpen={setIsAccountsOpen}\n                setIsRecordsOpen={setIsRecordsOpen}\n                setIsLoginOpen={setIsLoginOpen}\n                setIsSignupOpen={setIsSignupOpen}\n                setIsLandingOpen={setIsLandingOpen}\n                setLoggedIn={setLoggedIn}\n                setLoggedInUser={setLoggedInUser}\n            />\n        }\n    </>\n};\n\nexport default NavBar;\n\n// TODO: make responsive (hamburger menu)","const dashboardPage = ({isDashboardOpen}) => {\n    return <>\n        <div className={`\n        `}>\n            <div>Dashboard Page (Under construction...)</div>\n        </div>\n    </>\n};\n\nexport default dashboardPage;","const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'PHP'\n});\n\nconst AccountRow = ({\n    name,\n    email,\n    balance,\n    // accountType,\n\n    setIsActAccountModalOpen,\n    setActAccountName,\n}) => {\n    // handlers\n    const handleAccountRowClick = () => {\n        setActAccountName(email);\n        setIsActAccountModalOpen(true);\n    }\n\n    // render\n    return <div onClick={handleAccountRowClick} className=\"\n    flex justify-between align-center\n    py-4 px-6 mb-4\n    border-gray-150 border-2 rounded-lg\n    hover:shadow-md\n    transition duration-200\n    \">\n        <div className=\"font-bold\">{name}</div>\n        <div>{email}</div>\n        <div>{formatter.format(balance)}</div>\n    </div>\n};\n\nexport default AccountRow;\n\n","const Button = ({content, color, hoverColor, otherStyling, onClickFunction}) => {\n    return <button onClick={onClickFunction} className={`\n    ${color} ${hoverColor} rounded-3xl\n    text-white\n    py-2 px-4\n    transition duration-200\n    ${otherStyling}\n    `}>\n        {content}\n    </button>\n};\n\nexport default Button;","// ACCOUNTS\n\n// add new account\nexport const addAccount = (accounts, idGenerator, holderName, email, initialValue, records, recordsIdGenerator) => {\n    // TODO: check if email exists, check if balance is negative, name has to start with string\n    // push to accounts\n    accounts.push(\n        {\n            id: idGenerator,\n            email: email,\n            name: holderName,\n            balance: parseInt(initialValue),\n        }\n    );\n\n    // increment data\n    idGenerator++;\n\n    // add record\n    let [newRecords, newRecordsIdGenerator] = addRecord(records, recordsIdGenerator, email, \"initialize\", initialValue);\n\n    return [accounts, idGenerator, newRecords, newRecordsIdGenerator];\n};\n\n// delete accounts\nexport const deleteAccount = (accounts, email) => {\n    return accounts.filter(account => account.email.toLowerCase() !== email.toLowerCase());\n};  \n\n// withdraw\nexport const withdraw = (accounts, email, amt, records, recordsIdGenerator) => {\n    // update accounts\n    let newAccounts = accounts.map(account => {\n        if (account.email.toLowerCase() === email.toLowerCase()) {\n            account.balance -= amt;\n            return account;\n        } else {\n            return account;\n        };\n    });\n\n    // update records\n    let [newRecords, newRecordsIdGenerator] = addRecord(records, recordsIdGenerator, email, \"withdraw\", amt);\n\n    return [newAccounts, newRecords, newRecordsIdGenerator];\n};\n\n// deposit\nexport const deposit = (accounts, email, amt, records, recordsIdGenerator) => { // ! email or account, not yet sure\n    // update accounts\n    let newAccounts = accounts.map(account => {\n        if (account.email.toLowerCase() === email.toLowerCase()) {\n            account.balance += parseFloat(amt);\n            return account;\n        } else {\n            return account;\n        };\n    });\n\n    // update records\n    let [newRecords, newRecordsIdGenerator] = addRecord(records, recordsIdGenerator, email, \"deposit\", amt);\n    return [newAccounts, newRecords, newRecordsIdGenerator];\n};\n\n// transfer\nexport const transfer = (accounts, emailFrom, emailTo, amt, records, recordsIdGenerator) => { // ! email or account, not yet sure\n    accounts.map(account => {\n        if (account.email.toLowerCase() === emailFrom.toLowerCase()) {\n            account.balance -= parseFloat(amt);\n            return account;\n        } else {\n            return account;\n        };\n    });\n    \n    accounts.map(account => {\n        if (account.email.toLowerCase() === emailTo.toLowerCase()) {\n            account.balance += parseFloat(amt);\n            return account;\n        } else {\n            return account;\n        };\n    });\n\n    // update records\n    let [newRecords, newRecordsIdGenerator] = addRecord(records, recordsIdGenerator, emailFrom, \"transferFrom\", amt);\n    let [newNewRecords, newNewRecordsIdGenerator] = addRecord(newRecords, newRecordsIdGenerator-1, emailTo, \"transferTo\", amt);\n\n    return [accounts, newNewRecords, newNewRecordsIdGenerator];\n}\n\n// RECORDS\n\n// add record\nexport const addRecord = (records, recordsIdGenerator, email, type, amount) => {\n    // push to accounts\n    records.push(\n        {\n            id: recordsIdGenerator,\n            email: email,\n            type: type,\n            amount: amount,\n        }\n    );\n\n    // increment data\n    recordsIdGenerator++;\n\n    return [records, recordsIdGenerator];\n};\n\n// get account from email\nexport const getAccount = (accounts, email) => {\n    return accounts.filter(account => account.email.toLowerCase() === email.toLowerCase())[0];\n}","const ErrorDisplay = ({\n    errors,\n}) => {\n    return <div id=\"errors-display\" className=\"border-2 rounded-md border-red-600 py-2 px-3 text-red-600 text-left mb-3 w-full\">\n        <h1 className=\"text-lg font-bold\">Error</h1>\n        <ol className=\"text-sm text-justify\">\n            {errors.map((error, index) =>\n                <li key={index} className=\"pt-2\">{error}</li>\n            )}\n        </ol>\n    </div>\n};\n\nexport default ErrorDisplay;","import { useState } from 'react';\nimport { addAccount } from '../../utils/accounts';\nimport Button from '../common/Button';\nimport ErrorDisplay from '../common/ErrorDisplay';\n\n\n// TODO: x-button to close modal\n// TODO: click out to close modal\n// TODO: esc key to close modal\n// TODO: understand what fixed [z-10 inset-0 overflow-y-auto] classes do in Tailwind CSS\n\nconst AddAccountModal = ({\n    // data states\n    accounts,\n    setAccounts,\n    idGenerator,\n    setIdGenerator,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n\n    // form states\n    newAccountName,\n    setNewAccountName,\n    newEmail,\n    setNewEmail,\n    newAccountType,\n    setNewAccountType,\n    newInitialAmount,\n    setNewInitialAmount,\n\n    // modal open\n    isAddAccountModalOpen,\n    setIsAddAccountModalOpen,\n}) => {\n    // states\n    const [errors, setErrors] = useState([]);\n    const [isErrorDisplayOpen, setIsErrorDisplayOpen] = useState(false);\n\n    // functions for the form\n    const handleNewAccountNameChange = (e) => {\n        setNewAccountName(e.target.value);\n    }\n\n    const handleNewEmailChange = (e) => {\n        setNewEmail(e.target.value);\n    }\n\n    const handleNewAccountTypeChange = (e) => {\n        setNewAccountType(e.target.value);\n    }\n\n    const handleNewInitialAmountChange = (e) => {\n        setNewInitialAmount(e.target.value);\n    }\n\n    const handleNewAccountSubmit = (e) => {\n        // prevent refresh\n        e.preventDefault();\n        setIsErrorDisplayOpen(false);\n\n        // validation\n        let listOfErrors = handleValidation();\n        setErrors(listOfErrors);\n\n        if (listOfErrors.length===0) {\n            // add accounts\n            let [newAccounts, newIdGenerator, newRecords, newRecordsIdGenerator] = addAccount(accounts, idGenerator, newAccountName, newEmail, newInitialAmount, records, recordsIdGenerator);\n            setAccounts(newAccounts);\n            setIdGenerator(newIdGenerator);\n            setRecords(newRecords);\n            setRecordsIdGenerator(newRecordsIdGenerator);\n\n            // reset values\n            setNewAccountName(\"\");\n            setNewEmail(\"\");\n            setNewAccountType(\"\");\n            setNewInitialAmount(0);\n\n            // close modal\n            setIsAddAccountModalOpen(false);\n\n        } else {\n            // display errors\n            setIsErrorDisplayOpen(true);\n        }\n    }\n\n    const handleValidation =  () => {\n        let listOfErrors = [];\n        // check if name starts with number\n        if ([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(newAccountName[0])) {\n            listOfErrors.push(\"Account name cannot start with number.\")\n        }\n\n        // check if email already exists\n        if (accounts.filter(account => account.email.toLowerCase() === newEmail.toLowerCase()).length !== 0) {\n            listOfErrors.push(\"Email already associated with another account.\");\n        }\n\n        // check if intial balance is negative\n        if (newInitialAmount < 0) {\n            listOfErrors.push(\"Initial balance cannot be negative.\");\n        }\n\n        return listOfErrors;\n    }\n\n    // render\n    return <>\n        <section className={`\n        h-screen w-full fixed z-20 inset-0 overflow-y-auto\n        flex justify-center items-center text-center\n        bg-black bg-opacity-50\n        `}>\n            <form onSubmit={handleNewAccountSubmit} className=\"\n            py-4 px-6 mt-8 mb-4 mx-8\n            border-gray-150 border-2 rounded-lg\n            transition duration-200\n            flex flex-col justify-center\n            bg-white\n            w-96\n            \">\n                <h1 className=\"text-2xl font-bold mb-4\">Add Account</h1>\n                {isErrorDisplayOpen &&\n                    <ErrorDisplay errors={errors} />\n                }\n                <div className=\"flex flex-col mb-4\">\n                    <label>Account Name</label>\n                    <input type=\"text\" value={newAccountName} onChange={handleNewAccountNameChange} required className=\"form-input rounded-lg\"/>\n                </div>\n                <div className=\"flex flex-col mb-4\">\n                    <label>Email</label>\n                    <input type=\"email\" value={newEmail} onChange={handleNewEmailChange} required className=\"form-input rounded-lg\"/>\n                </div>\n                {/* <div className=\"flex flex-col mb-4\">\n                    <label>Account Type</label>\n                    <select value={newAccountType} onChange={handleNewAccountTypeChange} required className=\"form-select rounded-lg\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    </select> \n                </div> */}\n                <div className=\"flex flex-col mb-6\">\n                    <label>Starting Amount</label>\n                    <input type=\"number\" value={newInitialAmount} required onChange={handleNewInitialAmountChange} className=\"form-input rounded-lg\"/>\n                </div>\n\n                <div>\n                    <Button\n                        content={<>\n                            <i className=\"fas fa-plus text-xs\"></i> <span className=\"text-sm\">Create</span>\n                        </>}\n                        color=\"bg-green-500\"\n                        hoverColor=\"hover:bg-green-600\"\n                        otherStyling=\"w-3/5\"\n                    />\n                </div>\n            </form>\n        </section>\n    </>\n} \n\nexport default AddAccountModal;","import Button from '../common/Button';\nimport ErrorDisplay from '../common/ErrorDisplay';\n\nconst DepositActionPage = ({\n    accounts,\n    setAccounts,\n    \n    action,\n    setAction,\n    actAccountName,\n    setActAccountName,\n    actDepositAmount,\n    setActDepositAmount,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n\n    errors,\n    isErrorDisplayOpen,\n    errorAction,\n}) => {\n    // \n    // handlers\n    const handleActAccountNameChange = (e) => {\n        setActAccountName(e.target.value);\n    }\n\n    const handleActDepositAmountChange = (e) => {\n        setActDepositAmount(e.target.value);\n    }\n\n    // render\n    return <div className={`\n    flex flex-col justify-center items-center\n    `}>\n        <div className=\"flex flex-col mb-4\">\n            <label htmlFor=\"deposit-amount\">Deposit Amount (Php)</label>\n            <input value={actDepositAmount} onChange={handleActDepositAmountChange} type=\"number\" id=\"deposit-amount\" required={action===\"deposit\" ? true : false} className=\"form-input rounded-lg w-72\"/>\n        </div>\n        \n        {isErrorDisplayOpen && errorAction === \"deposit\" &&\n            <ErrorDisplay errors={errors} />\n        }\n\n        {/* submit button */}\n        <div>\n            <Button\n                content=\"Add record\"\n                color=\"bg-green-500\"\n                hoverColor=\"hover:bg-green-600\"\n                otherStyling=\"w-60\"\n            />\n        </div>\n    </div>\n}\n\nexport default DepositActionPage;","import Button from '../common/Button';\nimport ErrorDisplay from '../common/ErrorDisplay';\n\nconst WithdrawActionPage = ({\n    accounts,\n    setAccounts,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n    \n    action,\n    setAction,\n    actAccountName,\n    setActAccountName,\n    actWithdrawAmount,\n    setActWithdrawAmount,\n\n    errors,\n    isErrorDisplayOpen,\n    errorAction,\n}) => {\n    // handlers\n    const handleActWithdrawAmountChange = (e) => {\n        setActWithdrawAmount(e.target.value);\n    }\n\n    // render\n    return <div className={`\n    flex flex-col justify-center items-center\n    `}>\n        <div className=\"flex flex-col mb-4\">\n            <label htmlFor=\"withdraw-amount\">Withdraw Amount (Php)</label>\n            <input value={actWithdrawAmount} onChange={handleActWithdrawAmountChange} type=\"number\" id=\"withdraw-amount\" required={action===\"withdraw\" ? true : false} className=\"form-input rounded-lg w-72\"/>\n        </div>\n\n        {isErrorDisplayOpen && errorAction === \"withdraw\" &&\n            <ErrorDisplay errors={errors} />\n        }\n        \n        {/* submit button */}\n        <div>\n            <Button\n                content=\"Add record\"\n                color=\"bg-green-500\"\n                hoverColor=\"hover:bg-green-600\"\n                otherStyling=\"w-60\"\n            />\n        </div>\n    </div>\n}\n\nexport default WithdrawActionPage;","import Button from '../common/Button';\nimport ErrorDisplay from '../common/ErrorDisplay';\n\n\nconst TransferActionPage = ({\n    accounts,\n    setAccounts,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n    \n    action,\n    setAction,\n    actAccountName,\n    setActAccountName,\n    actTransferToAccountName,\n    setActTransferToAccountName,\n    actTransferAmount,\n    setActTransferAmount,\n\n    errors,\n    isErrorDisplayOpen,\n    errorAction,\n}) => {\n    // handlers\n    const handleActTransferToAccountNameChange = (e) => {\n        setActTransferToAccountName(e.target.value);\n    }\n    \n    const handleActTransferAmountChange = (e) => {\n        setActTransferAmount(e.target.value);\n    }\n\n    // render\n    return <div className={`\n    flex flex-col justify-center items-center\n    `}>\n        <div className=\"flex flex-col mb-4\">\n            {/* TODO: remove repetitive datalist dropdown icon */}\n            <label htmlFor=\"transfer-to-account\">Transfer to</label>\n            <input\n                value={actTransferToAccountName}\n                onChange={handleActTransferToAccountNameChange}\n                list=\"transfer-to-account-list\"\n                name=\"transfer-to-account\"\n                id=\"transfer-to-account\"\n                required={action===\"transfer\" ? true : false}\n                className=\"\n                form-select truncate rounded-lg\n                w-72\n            \"/>\n            <datalist id=\"transfer-to-account-list\">\n                {\n                    accounts.map((account, index) => {\n                        return <option key={index} label={`${account.name} (${account.email})`} value={account.email}/>\n                    })\n                }\n            </datalist>\n        </div>\n\n        <div className=\"flex flex-col mb-4\">\n            <label htmlFor=\"transfer-amount\">Transfer Amount (Php)</label>\n            <input value={actTransferAmount} onChange={handleActTransferAmountChange} type=\"number\" id=\"transfer-amount\" required={action===\"transfer\" ? true : false} className=\"form-input rounded-lg w-72\"/>\n        </div>\n\n        {isErrorDisplayOpen && errorAction === \"transfer\" &&\n            <ErrorDisplay errors={errors} />\n        }\n\n        \n        {/* submit button */}\n        <div>\n            <Button\n                content=\"Add record\"\n                color=\"bg-green-500\"\n                hoverColor=\"hover:bg-green-600\"\n                otherStyling=\"w-60\"\n            />\n        </div>\n    </div>\n}\n\nexport default TransferActionPage;","import React, { useState } from 'react';\n\nimport DepositActionPage from './DepositActionPage';\nimport WithdrawActionPage from './WithdrawActionPage';\nimport TransferActionPage from './TransferActionPage';\n\nimport { deposit, withdraw, transfer } from '../../utils/accounts';\n\n// TODO: x-button to close modal\n// TODO: click out to close modal\n// TODO: esc key to close modal\n// TODO: understand what fixed [z-10 inset-0 overflow-y-auto] classes do in Tailwind CSS\n\nconst ActAccountModal = ({\n    // data states\n    accounts,\n    setAccounts,\n    idGenerator,\n    setIdGenerator,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n\n    // form states\n    action,\n    setAction,\n    actAccountName,\n    setActAccountName,\n    actTransferToAccountName,\n    setActTransferToAccountName,\n    actDepositAmount,\n    setActDepositAmount,\n    actWithdrawAmount,\n    setActWithdrawAmount,\n    actTransferAmount,\n    setActTransferAmount,\n\n    // modal open\n    isActAccountModalOpen,\n    setIsActAccountModalOpen,\n    \n}) => {\n    // states\n    const [errors, setErrors] = useState([]);\n    const [isErrorDisplayOpen, setIsErrorDisplayOpen] = useState(false);\n    const [errorAction, setErrorAction] = useState(\"\");\n\n    // functions for the form\n    const handleDepositTabOnClick = () => {\n        setAction(\"deposit\");\n    }\n\n    const handleWithdrawTabOnClick = () => {\n        setAction(\"withdraw\");\n    }\n\n    const handleTransferTabOnClick = () => {\n        setAction(\"transfer\");\n    }\n\n    const handleActAccountNameChange = (e) => {\n        setActAccountName(e.target.value);\n    }\n\n    const handleActAccountSubmit = (e) => {\n        e.preventDefault();\n        setIsErrorDisplayOpen(false);\n\n        // validation\n        let listOfErrors = handleValidation();\n        setErrors(listOfErrors);\n\n        if (listOfErrors.length===0) {\n            // actions\n            if (action===\"deposit\") {\n                let [newAccounts, newRecords, newRecordsIdGenerator] = deposit(accounts, actAccountName, actDepositAmount, records, recordsIdGenerator);\n                setAccounts(newAccounts);\n                setRecords(newRecords);\n                setRecordsIdGenerator(newRecordsIdGenerator);\n            } else if (action===\"withdraw\") {\n                let [newAccounts, newRecords, newRecordsIdGenerator] = withdraw(accounts, actAccountName, actWithdrawAmount, records, recordsIdGenerator);\n                setAccounts(newAccounts);\n                setRecords(newRecords);\n                setRecordsIdGenerator(newRecordsIdGenerator);\n            } else if (action===\"transfer\") {\n                let [newAccounts, newRecords, newRecordsIdGenerator] = transfer(accounts, actAccountName, actTransferToAccountName, actTransferAmount, records, recordsIdGenerator);\n                setAccounts(newAccounts);\n                setRecords(newRecords);\n                setRecordsIdGenerator(newRecordsIdGenerator);\n            }\n\n            // reset inputs/states\n            setActAccountName(\"\");\n            setActTransferToAccountName(\"\");\n            setActDepositAmount(0);\n            setActWithdrawAmount(0);\n            setActTransferAmount(0);\n            setAction(\"deposit\");\n            setErrorAction(\"\");\n            \n            // close modal\n            setIsActAccountModalOpen(false);\n        } else {\n            // display errors\n            setIsErrorDisplayOpen(true);\n            setErrorAction(action);\n        }\n    }\n\n    const handleValidation =  () => {\n        let listOfErrors = [];\n\n        // check if email belongs to an account that exists\n        if (accounts.filter(account => account.email.toLowerCase() === actAccountName.toLowerCase()).length === 0) {\n            listOfErrors.push(\"Account does not exist. Please pick an account that exists.\");\n        } else {\n            // query account\n            let checkAccount = accounts.filter(account => account.email.toLowerCase() !== actAccountName.toLowerCase())[0]; \n\n            // check transactions\n            if (action === \"deposit\") {\n                if (actDepositAmount < 0) {\n                    listOfErrors.push(\"Deposit amount cannot be negative.\");\n                }\n            } else if (action === \"withdraw\") {\n                if (actWithdrawAmount < 0) {\n                    listOfErrors.push(\"Withdraw amount cannot be negative.\");\n                }\n                if (actWithdrawAmount > checkAccount.balance) {\n                    listOfErrors.push(\"Cannot withdraw more than account's current balance.\")\n                }\n            } else if (action === \"transfer\") {\n                if (accounts.filter(account => account.email.toLowerCase() === actTransferToAccountName.toLowerCase()).length === 0) {\n                    listOfErrors.push(\"Account to transfer to does not exist. Please pick an account that exists.\");\n                }\n                if (actTransferAmount < 0) {\n                    listOfErrors.push(\"Transfer amount cannot be negative.\");\n                }\n                if (actTransferAmount > checkAccount.balance) {\n                    listOfErrors.push(\"Cannot transfer more than account's current balance.\")\n                }\n            }\n        }\n\n        return listOfErrors;\n    }\n\n\n    // render\n    return <>\n        <section className={`\n        h-screen w-full fixed z-20 inset-0 overflow-y-auto\n        flex justify-center items-center text-center\n        bg-black bg-opacity-50\n        `}>\n            <form onSubmit={handleActAccountSubmit} className=\"\n            py-4 px-6 mt-8 mb-4 mx-8\n            border-gray-150 border-2 rounded-lg\n            transition duration-200\n            bg-white\n            w-96 lg:w-5/12\n            \">\n                <h1 className=\"text-2xl font-bold mb-4\">Add Record</h1>\n                <ul className=\"\n                flex flex-row justify-stretch items-stretch\n                rounded-lg border-4 border-gray-300\n                \">\n                    <li onClick={handleDepositTabOnClick} className={`\n                    w-full cursor-pointer\n                    ${action===\"deposit\" ? \"bg-gray-300 border-2 border-gray-300 hover:bg-gray-300\" : \"hover:bg-gray-100\"}\n                    `}>\n                        <i className=\"fas fa-plus text-xs\"></i> <span className=\"font-semibold\">Deposit</span>\n                    </li>\n                    <li onClick={handleWithdrawTabOnClick} className={`\n                    w-full cursor-pointer\n                    border-l-4 border-gray-300 hover:bg-gray-100\n                    ${action===\"withdraw\" ? \"bg-gray-300 border-2 border-gray-300 hover:bg-gray-300\" : \"hover:bg-gray-100\"}\n                    `}>\n                        <i className=\"fas fa-minus text-xs\"></i> <span className=\"font-semibold\">Withdraw</span>\n                    </li>\n                    <li onClick={handleTransferTabOnClick} className={`\n                    w-full cursor-pointer\n                    border-l-4 border-gray-300 hover:bg-gray-100\n                    ${action===\"transfer\" ? \"bg-gray-300 border-2 border-gray-300 hover:bg-gray-300\" : \"hover:bg-gray-100\"}\n                    `}>\n                        <i className=\"fas fa-exchange-alt text-xs\"></i> <span className=\"font-semibold\">Transfer</span>\n                    </li>\n                </ul>\n\n                {/* FORM */}\n                <div className=\"flex flex-col justify-center items-center\">\n                    <div className=\"flex flex-col mb-4\">\n                        {/* TODO: remove repetitive datalist dropdown icon */}\n                        <label htmlFor=\"action-account\">Account</label>\n                        <input\n                            value={actAccountName}\n                            onChange={handleActAccountNameChange}\n                            list=\"action-account-list\"\n                            name=\"action-account\"\n                            id=\"action-account\"\n                            required\n                            className=\"\n                            form-select truncate rounded-lg\n                            w-72\n                        \"/>\n                        <datalist id=\"action-account-list\">\n                            {\n                                accounts.map((account, index) => {\n                                    return <option key={index} label={`${account.name} (${account.email})`} value={account.email}/>\n                                })\n                            }\n                        </datalist>\n                    </div>\n                    {/* showing specific components depending on chosen action type */}\n                    {action===\"deposit\" &&\n                        <DepositActionPage \n                        accounts={accounts}\n                        setAccounts={setAccounts}\n                        records={records}\n                        setRecords={setRecords}\n                        recordsIdGenerator={recordsIdGenerator}\n                        setRecordsIdGenerator={setRecordsIdGenerator}\n\n                        action={action}\n                        setAction={setAction}\n                        actAccountName={actAccountName}\n                        setActAccountName={setActAccountName}\n                        actDepositAmount={actDepositAmount}\n                        setActDepositAmount={setActDepositAmount}\n\n                        errors={errors}\n                        isErrorDisplayOpen={isErrorDisplayOpen}\n                        errorAction={errorAction}\n                        />\n                    }\n                    \n                    {action===\"withdraw\" &&\n                        <WithdrawActionPage\n                        accounts={accounts}\n                        setAccounts={setAccounts}\n                        records={records}\n                        setRecords={setRecords}\n                        recordsIdGenerator={recordsIdGenerator}\n                        setRecordsIdGenerator={setRecordsIdGenerator}\n\n                        action={action}\n                        setAction={setAction}\n                        actAccountName={actAccountName}\n                        setActAccountName={setActAccountName}\n                        actWithdrawAmount={actWithdrawAmount}\n                        setActWithdrawAmount={setActWithdrawAmount}\n\n                        errors={errors}\n                        isErrorDisplayOpen={isErrorDisplayOpen}\n                        errorAction={errorAction}\n                        />\n                    }\n\n                    {action===\"transfer\" && \n                        <TransferActionPage\n                        accounts={accounts}\n                        setAccounts={setAccounts}\n                        records={records}\n                        setRecords={setRecords}\n                        recordsIdGenerator={recordsIdGenerator}\n                        setRecordsIdGenerator={setRecordsIdGenerator}\n\n                        action={action}\n                        setAction={setAction}\n                        actAccountName={actAccountName}\n                        setActAccountName={setActAccountName}\n                        actTransferToAccountName={actTransferToAccountName}\n                        setActTransferToAccountName={setActTransferToAccountName}\n                        actTransferAmount={actTransferAmount}\n                        setActTransferAmount={setActTransferAmount}\n\n                        errors={errors}\n                        isErrorDisplayOpen={isErrorDisplayOpen}\n                        errorAction={errorAction}\n                        />\n                    }\n                    \n                </div>\n            </form>\n        </section>\n    </>\n} \n\nexport default ActAccountModal;","import AccountRow from \"./AccountRow\";\nimport Button from \"../common/Button\";\nimport AddAccountModal from \"./AddAccountModal\";\nimport ActAccountModal from \"../records/ActAccountModal\";\n\nconst AccountsPage = ({\n    accounts,\n    setAccounts,\n    idGenerator,\n    setIdGenerator,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n    isAccountsOpen,\n\n    // form states\n    newAccountName,\n    setNewAccountName,\n    newEmail,\n    setNewEmail,\n    newAccountType,\n    setNewAccountType,\n    newInitialAmount,\n    setNewInitialAmount,\n\n    action,\n    setAction,\n    actAccountName,\n    setActAccountName,\n    actTransferToAccountName,\n    setActTransferToAccountName,\n    actDepositAmount,\n    setActDepositAmount,\n    actWithdrawAmount,\n    setActWithdrawAmount,\n    actTransferAmount,\n    setActTransferAmount,\n\n    // modals\n    isAddAccountModalOpen,\n    setIsAddAccountModalOpen,\n    isActAccountModalOpen,\n    setIsActAccountModalOpen,\n\n    // login\n    loggedIn,\n\n}) => {\n    // functions\n    const handleAddAccountOnClick = () => {\n        setIsAddAccountModalOpen(true);\n    }\n\n    // render\n    return <>\n        {/* accounts page */}\n        <div className={`\n        flex justify-center items-start text-center my-4 mx-8 mt-8\n        `}>\n            <div id=\"accounts-utility-panel\" className=\"\n            w-80 mr-4 px-4 py-8\n            bg-white\n            border-gray-150 border-2 rounded-lg\n            flex flex-col justify-start align-center\n            \">\n                <h1 className=\"\n                mb-4 mx-4\n                text-2xl font-bold\n                \">Accounts</h1>\n                <Button\n                    content={<>\n                        <i className=\"fas fa-plus text-xs\"></i> <span className=\"text-sm\">Add</span>\n                    </>}\n                    color=\"bg-green-500\"\n                    hoverColor=\"hover:bg-green-600\"\n                    otherStyling=\"mx-4\"\n                    onClickFunction={handleAddAccountOnClick}\n                />\n            </div>\n            <div id=\"accounts-list\" className=\"\n            flex-auto\n            bg-white\n            \">\n                {accounts.length===0 &&\n                    <div className=\"text-gray-400 text-lg mt-16\">\n                        <div><i class=\"far fa-frown\"></i></div>\n                        <p> No accounts here yet.</p>\n                    </div>\n                }\n                {accounts.map((account, index) => <AccountRow\n                    key={index}\n                    name={account.name}\n                    email={account.email}\n                    balance={account.balance}\n                    // accountType={account.type}\n                    \n                    setIsActAccountModalOpen={setIsActAccountModalOpen}\n                    setActAccountName={setActAccountName}\n                />)}\n            </div>\n        </div>\n\n        {/* add account modal */}\n        {isAddAccountModalOpen &&\n            <AddAccountModal\n            accounts={accounts}\n            setAccounts={setAccounts}\n            idGenerator={idGenerator}\n            setIdGenerator={setIdGenerator}\n            records={records}\n            setRecords={setRecords}\n            recordsIdGenerator={recordsIdGenerator}\n            setRecordsIdGenerator={setRecordsIdGenerator}\n\n            newAccountName={newAccountName}\n            setNewAccountName={setNewAccountName}\n            newEmail={newEmail}\n            setNewEmail={setNewEmail}\n            newAccountType={newAccountType}\n            setNewAccountType={setNewAccountType}\n            newInitialAmount={newInitialAmount}\n            setNewInitialAmount={setNewInitialAmount}\n\n            isAddAccountModalOpen={isAddAccountModalOpen}\n            setIsAddAccountModalOpen={setIsAddAccountModalOpen}\n            />\n        }\n        \n\n        {/* act account modal */}\n        {isActAccountModalOpen && \n            <ActAccountModal\n            accounts={accounts}\n            setAccounts={setAccounts}\n            idGenerator={idGenerator}\n            setIdGenerator={setIdGenerator}\n            records={records}\n            setRecords={setRecords}\n            recordsIdGenerator={recordsIdGenerator}\n            setRecordsIdGenerator={setRecordsIdGenerator}\n\n            action={action}\n            setAction={setAction}\n            actAccountName={actAccountName}\n            setActAccountName={setActAccountName}\n            actTransferToAccountName={actTransferToAccountName}\n            setActTransferToAccountName={setActTransferToAccountName}\n            actDepositAmount={actDepositAmount}\n            setActDepositAmount={setActDepositAmount}\n            actWithdrawAmount={actWithdrawAmount}\n            setActWithdrawAmount={setActWithdrawAmount}\n            actTransferAmount={actTransferAmount}\n            setActTransferAmount={setActTransferAmount}\n\n            isActAccountModalOpen={isActAccountModalOpen}\n            setIsActAccountModalOpen={setIsActAccountModalOpen}\n        />\n        }\n    </>\n};\n\nexport default AccountsPage;\n\n","const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'PHP'\n});\n\nconst RecordRow = ({\n    id,\n    name,\n    email,\n    type,\n    amount,\n    // accountType,\n\n    // setIsActAccountModalOpen,\n    // setActAccountName,\n}) => {\n    // handlers\n    const handleRecordRowClick = () => {\n        // setActAccountName(email);\n        // setIsActAccountModalOpen(true);\n    }\n\n    // render\n    return <div onClick={handleRecordRowClick} className={`\n    flex justify-between align-center\n    py-4 px-6 mb-4\n    border-2 rounded-lg\n    ${[\"initialize\", \"deposit\", \"transferTo\"].includes(type) ? \"border-green-300\" : \"border-red-300\"}\n    hover:shadow-md\n    transition duration-200\n    `}>\n        <div className=\"flex flex-col justify-center items-start\">\n            <div className=\"font-bold\">{name}</div>\n            <div className=\"text-xs text-gray-600\">{email}</div>\n        </div>\n        <div>\n            {type===\"deposit\" && <><i className=\"fas fa-plus text-xs\"/> <span>Deposit</span></>}\n            {type===\"withdraw\" && <><i className=\"fas fa-minus text-xs\"/> <span>Withdraw</span></>}\n            {type===\"transferTo\" && <><i className=\"fas fa-exchange-alt text-xs\"/> <span>Transfer to</span></>}\n            {type===\"transferFrom\" && <><i className=\"fas fa-exchange-alt text-xs\"/> <span>Transfer from</span></>}\n            {type===\"initialize\" && <><i className=\"fas fa-plus text-xs\"/> <span>Create account</span></>}\n        </div>\n\n        <div>{[\"initialize\", \"deposit\", \"transferTo\"].includes(type) ?  \"\" : \"-\"} {formatter.format(amount)}</div>\n        \n    </div>\n};\n\nexport default RecordRow;\n\n","import RecordRow from \"./RecordRow\";\nimport Button from \"../common/Button\";\nimport ActAccountModal from \"./ActAccountModal\";\nimport { getAccount } from \"./../../utils/accounts\"\n\nconst RecordsPage = ({\n    isRecordsOpen,\n\n    accounts,\n    setAccounts,\n    idGenerator,\n    setIdGenerator,\n    records,\n    setRecords,\n    recordsIdGenerator,\n    setRecordsIdGenerator,\n\n    // form states\n    action,\n    setAction,\n    actAccountName,\n    setActAccountName,\n    actTransferToAccountName,\n    setActTransferToAccountName,\n    actDepositAmount,\n    setActDepositAmount,\n    actWithdrawAmount,\n    setActWithdrawAmount,\n    actTransferAmount,\n    setActTransferAmount,\n\n    // modals\n    isActAccountModalOpen,\n    setIsActAccountModalOpen,\n\n}) => {\n    // functions\n    const handleActAccountOnClick = () => {\n        setIsActAccountModalOpen(true);\n    }\n\n    // render\n    return <>\n        <div className={`\n        flex justify-center items-start text-center my-4 mx-8 mt-8\n        `}>\n            <div id=\"records-utility-panel\" className=\"\n            w-80 mr-4 px-4 py-8\n            bg-white\n            border-gray-150 border-2 rounded-lg\n            flex flex-col justify-start align-center\n            \">\n                <h1 className=\"\n                mb-4 mx-4\n                text-2xl font-bold\n                \">Records</h1>\n                <Button\n                    content={<>\n                        <i className=\"fas fa-plus text-xs\"></i> <span className=\"text-sm\">Add</span>\n                    </>}\n                    color=\"bg-green-500\"\n                    hoverColor=\"hover:bg-green-600\"\n                    otherStyling=\"mx-4\"\n                    onClickFunction={handleActAccountOnClick}\n                />\n            </div>\n            <div id=\"records-list\" className=\"\n            flex flex-col-reverse flex-auto\n            bg-white\n            \">\n                {records.length===0 &&\n                    <div className=\"text-gray-400 text-lg mt-16\">\n                        <div><i className=\"far fa-frown\"></i></div>\n                        <p> No records here yet.</p>\n                    </div>\n                }\n                {records.map((record, index) => <RecordRow\n                    key={index}\n                    id={record.id}\n                    name={getAccount(accounts, record.email).name}\n                    email={record.email}\n                    type={record.type}\n                    amount={record.amount}\n                    // accountType={account.type}\n                    \n                    // setIsActAccountModalOpen={setIsActAccountModalOpen}\n                    // setActAccountName={setActAccountName}\n                />)}\n            </div>\n        </div>\n\n        {/* act account modal */}\n        {isActAccountModalOpen && \n            <ActAccountModal\n            accounts={accounts}\n            setAccounts={setAccounts}\n            idGenerator={idGenerator}\n            setIdGenerator={setIdGenerator}\n            records={records}\n            setRecords={setRecords}\n            recordsIdGenerator={recordsIdGenerator}\n            setRecordsIdGenerator={setRecordsIdGenerator}\n\n            action={action}\n            setAction={setAction}\n            actAccountName={actAccountName}\n            setActAccountName={setActAccountName}\n            actTransferToAccountName={actTransferToAccountName}\n            setActTransferToAccountName={setActTransferToAccountName}\n            actDepositAmount={actDepositAmount}\n            setActDepositAmount={setActDepositAmount}\n            actWithdrawAmount={actWithdrawAmount}\n            setActWithdrawAmount={setActWithdrawAmount}\n            actTransferAmount={actTransferAmount}\n            setActTransferAmount={setActTransferAmount}\n\n            isActAccountModalOpen={isActAccountModalOpen}\n            setIsActAccountModalOpen={setIsActAccountModalOpen}\n        />\n        }\n    </>\n};\n\nexport default RecordsPage;\n\n","export default __webpack_public_path__ + \"static/media/bg-02.5ed8a4cd.jpg\";","import { useState } from 'react';\nimport bgImage from './../../assets/bg-02.jpg'\nimport ErrorDisplay from '../common/ErrorDisplay';\n\nconst LoginPage = ({\n    setIsLoginOpen,\n    setIsSignupOpen,\n    setIsDashboardOpen,\n    setIsAccountsOpen,\n    setIsRecordsOpen,\n    adminAccounts,\n    setAdminAccounts,\n    loggedIn,\n    setLoggedIn,\n    loggedInUser,\n    setLoggedInUser,\n}) => {\n    // form states\n    const [usernameLogin, setUsernameLogin] = useState(\"\");\n    const [passwordLogin, setPasswordLogin] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isErrorDisplayOpen, setIsErrorDisplayOpen] = useState(false);\n\n    // handlers\n    const handleLogInSubmit = (e) => {\n        e.preventDefault();\n        setIsErrorDisplayOpen(false);\n        let listOfErrors=[];\n\n        // validation\n        let queriedAccount = adminAccounts.filter(account => account.username.toLowerCase() === usernameLogin.toLowerCase()); // not case sensitive\n\n        if (queriedAccount.length===0) {\n            listOfErrors.push(\"User does not exist.\");\n        } else if (\n            (queriedAccount.length===1) &&\n            (queriedAccount[0].password !== passwordLogin)\n        ) {\n            listOfErrors.push(\"Incorrect password\");\n        }\n        setErrors(listOfErrors);\n\n        // login\n        if (listOfErrors.length===0) {\n            // show accounts page\n            setIsLoginOpen(false);\n            setIsAccountsOpen(true);\n\n            // set state loggedIn\n            setLoggedIn(true);\n            setLoggedInUser(usernameLogin);\n\n            // empty forms\n            setUsernameLogin(\"\");\n            setPasswordLogin(\"\");\n        } else {\n            // display errors\n            setIsErrorDisplayOpen(true);\n        }\n\n        // TODO: add login successful message\n    }\n\n    const handleSignUpClick = (e) => {\n        e.preventDefault();\n\n        // show sign up page\n        setIsLoginOpen(false);\n        setIsSignupOpen(true);\n    }\n\n    const handleUsernameLoginChange = (e) => {\n        setUsernameLogin(e.target.value);\n    }\n\n    const handlePasswordLoginChange = (e) => {\n        setPasswordLogin(e.target.value);\n    }\n\n\n    // render\n    return <>\n    <div className={`\n    flex justify-center items-center\n    pt-10 pb-10\n    `} style={{\n        height: \"calc(100vh - 3.5rem)\",\n        background: `url(${bgImage}) no-repeat center center fixed`,\n        WebkitBackgroundSize: \"cover\",\n        MozBackgroundSize: \"cover\",\n        OBackgroundSize: \"cover\",\n        backgroundSize: \"cover\",\n    }}>        \n        <form onSubmit={handleLogInSubmit} className=\"\n        bg-white shadow-md rounded px-8 pt-6 pb-8\n        w-96\n        \">\n            <h1 className=\"text-2xl font-bold mb-4\">Login</h1>\n            {isErrorDisplayOpen &&\n                <ErrorDisplay errors={errors} />\n            }\n\n            <div className=\"mb-4 mt-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username-login\">\n                    Username\n                </label>\n                <input value={usernameLogin} onChange={handleUsernameLoginChange} id=\"username-login\" type=\"text\" placeholder=\"Username\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n            <div className=\"mb-6\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password-login\">\n                    Password\n                </label>\n                <input value={passwordLogin} onChange={handlePasswordLoginChange} id=\"password-login\" type=\"password\" placeholder=\"*********\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n\n            <div className=\"flex items-center justify-between mt-3\">\n                <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-200\">\n                    Sign In\n                </button>\n                <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800 cursor-pointer\" onClick={handleSignUpClick}>\n                    Don't have an account?\n                </a>\n            </div>\n        </form>\n    </div>\n    </>\n};\n\nexport default LoginPage;\n\n","import bgImage from './../../assets/bg-02.jpg'\nimport { useState } from 'react';\nimport { addAdminAccount } from '../../utils/login';\nimport ErrorDisplay from '../common/ErrorDisplay';\n\nconst SignUpPage = ({\n    setIsLoginOpen,\n    setIsSignupOpen,\n    setIsDashboardOpen,\n    setIsAccountsOpen,\n    setIsRecordsOpen,\n    adminAccounts,\n    setAdminAccounts,\n    loggedIn,\n    setLoggedIn,\n    loggedInUser,\n    setLoggedInUser,\n}) => {\n    // form control states\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isErrorDisplayOpen, setIsErrorDisplayOpen] = useState(false);\n\n    // handlers\n    const handleSignupSubmit = (e) => {\n        e.preventDefault();\n        setIsErrorDisplayOpen(false);\n\n        // validation\n        let listOfErrors = handleValidation();\n        setErrors(listOfErrors);\n\n        // update\n        if (listOfErrors.length===0) {\n            // add new admin account\n            setAdminAccounts(addAdminAccount(adminAccounts, firstName, lastName, email, username, password));\n\n            // empty forms\n            setFirstName(\"\");\n            setLastName(\"\");\n            setEmail(\"\");\n            setUsername(\"\");\n            setPassword(\"\");\n            setConfirmPassword(\"\");\n\n            // show accounts page\n            setIsSignupOpen(false);\n            setIsAccountsOpen(true);\n\n            // set state loggedIn\n            setLoggedIn(true);\n            setLoggedInUser(username);\n        } else {\n            // display errors\n            setIsErrorDisplayOpen(true);\n        }\n    }\n\n    const handleValidation =  () => {\n        let listOfErrors = [];\n\n        // check if email already exists\n        if (adminAccounts.filter(account => account.email.toLowerCase() === email.toLowerCase()).length !== 0) {\n            listOfErrors.push(\"Email was already registered previously. Please register with a different one.\");\n        }\n        // check if username already exists\n        if (adminAccounts.filter(account => account.username.toLowerCase() === username.toLowerCase()).length !== 0) {\n            listOfErrors.push(\"Username was already registered previously. Please register with a different one.\");\n        }\n        // password and confirmPassword should match\n        if (password !== confirmPassword) {\n            listOfErrors.push(\"Password and confirm password do not match.\");\n        }\n\n        return listOfErrors;\n    }\n\n    const handleLoginClick = (e) => {\n        e.preventDefault();\n\n        // show sign up page\n        setIsSignupOpen(false);\n        setIsLoginOpen(true);\n    }\n\n    const handleFirstNameChange = (e) => {\n        setFirstName(e.target.value);\n    }\n\n    const handleLastNameChange = (e) => {\n        setLastName(e.target.value);\n    }\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleConfirmPasswordChange = (e) => {\n        setConfirmPassword(e.target.value);\n    }\n\n\n    // render\n    return <>\n    <div className={`\n    flex justify-center items-center\n    pt-10 pb-10\n    `} style={{\n        background: `url(${bgImage}) no-repeat center center fixed`,\n        WebkitBackgroundSize: \"cover\",\n        MozBackgroundSize: \"cover\",\n        OBackgroundSize: \"cover\",\n        backgroundSize: \"cover\",\n    }}>        \n        <form onSubmit={handleSignupSubmit} className=\"\n        bg-white shadow-md rounded px-8 pt-6 pb-8\n        w-96\n        \">\n            <h1 className=\"text-2xl font-bold mb-4\">Sign Up</h1>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"first-name-signup\">\n                    First Name\n                </label>\n                <input value={firstName} onChange={handleFirstNameChange} required id=\"first-name-signup\" type=\"text\" placeholder=\"First Name\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"last-name-signup\">\n                    Last Name\n                </label>\n                <input value={lastName} onChange={handleLastNameChange} required id=\"last-name-signup\" type=\"text\" placeholder=\"Last Name\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email-signup\">\n                    Email\n                </label>\n                <input value={email} onChange={handleEmailChange} required id=\"email-signup\" type=\"email\" placeholder=\"Email\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username-signup\">\n                    Username\n                </label>\n                <input value={username} onChange={handleUsernameChange} required id=\"username-signup\" type=\"text\" placeholder=\"Username\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password-signup\">\n                    Password\n                </label>\n                <input value={password} onChange={handlePasswordChange} required id=\"password-signup\" type=\"password\" placeholder=\"*********\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n            <div className=\"mb-6\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirm-password-signup\">\n                    Confirm Password\n                </label>\n                <input value={confirmPassword} onChange={handleConfirmPasswordChange} required id=\"confirm-password-signup\" type=\"password\" placeholder=\"*********\" className=\"\n                shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\n                \"/>\n            </div>\n\n            {isErrorDisplayOpen &&\n                <ErrorDisplay errors={errors} />\n            }\n\n            <div className=\"flex items-center justify-between\">\n                <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline transition duration-200\">\n                    Register\n                </button>\n                <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800 cursor-pointer\" onClick={handleLoginClick}>\n                    Already have an account?\n                </a>\n            </div>\n        </form>\n    </div>\n    </>\n};\n\nexport default SignUpPage;","// SIGNUP\n// add new admin account\nexport const addAdminAccount = (adminAccounts, firstName, lastName, email, username, password) => {\n    // push to accounts\n    adminAccounts.push(\n        {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            username: username,\n            password: password,\n        }\n    );\n    return adminAccounts;\n};\n\n// delete admin accounts\nexport const deleteAdminAccount = (adminAccounts, email) => {\n    return adminAccounts.filter(account => account.email.toLowerCase() !== email.toLowerCase());\n};","export default __webpack_public_path__ + \"static/media/logo-display-white.7f5ccb72.png\";","import Button from '../common/Button';\nimport bgImage from './../../assets/bg-02.jpg'\nimport logoDisplay from './../../assets/logo-display-white.png'\n\nconst LandingPage = ({\n    setIsLandingOpen,\n    setIsLoginOpen,\n    setIsSignupOpen,\n}) => {\n    // handlers\n    const handleCallToActionClick = () => {\n        setIsLandingOpen(false);\n        setIsLoginOpen(true);\n    }\n\n    // render\n    return <>\n        <div className={`\n        flex justify-center items-center\n        pt-10 pb-10\n        `} style={{\n            height: \"calc(100vh - 3.5rem)\",\n            background: `url(${bgImage}) no-repeat center center fixed`,\n            WebkitBackgroundSize: \"cover\",\n            MozBackgroundSize: \"cover\",\n            OBackgroundSize: \"cover\",\n            backgroundSize: \"cover\",\n        }}>\n            <div className=\"\n            flex justify-center items-center flex-col\n            w-full bg-black bg-opacity-50\n            \"\n            style={{\n                height: \"calc(100vh - 3.5rem)\"}}\n            >\n                <div className=\"w-64 lg:w-1/4\">\n                    <img src={logoDisplay} alt=\"Next Bank Logo\"/>\n                </div>\n                <Button\n                    content=\"Get Started\"\n                    color=\"bg-green-500\"\n                    hoverColor=\"hover:bg-green-600\"\n                    otherStyling=\"mx-4 mt-4\"\n                    onClickFunction={handleCallToActionClick}\n                />\n            </div>\n\n        </div>\n    </>\n};\n\nexport default LandingPage;\n\n","import NavBar from './components/common/Navbar';\nimport DashboardPage from './components/dashboard/DashboardPage';\nimport AccountsPage from './components/accounts/AccountsPage';\nimport RecordsPage from './components/records/RecordsPage';\nimport LoginPage from './components/login/LoginPage';\nimport SignUpPage from './components/login/SignUpPage';\nimport LandingPage from './components/login/LandingPage';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// App\nconst App = () => {\n  // data\n  const [adminAccounts, setAdminAccounts] = useState(() => {\n    const savedValue = JSON.parse(localStorage.getItem(\"adminAccounts\"));\n    const initialValue = [\n      {\n        firstName: \"Jordan\",\n        lastName: \"Belfort\",\n        email: \"jbelfort@gmail.com\",\n        username: \"wolfOfWallStreet\",\n        password: \"password\",\n      }\n    ]\n    return savedValue || initialValue;\n  });\n  const [accounts, setAccounts] = useState(() => {\n    const savedValue = JSON.parse(localStorage.getItem(\"accounts\"));\n    const initialValue = [\n      {\n        id: 0,\n        email: \"lbj@gmail.com\",\n        name: \"LeBron James\",\n        balance: 1000000,\n      },\n      {\n        id: 1,\n        email: \"halimauCoder@gmail.com\",\n        name: \"Maurus Vitor\",\n        balance: 2000000,\n      },\n      {\n        id: 2,\n        email: \"elonmusk@gmail.com\",\n        name: \"Elon Musk\",\n        balance: 3000000,\n      },\n    ];\n    return savedValue || initialValue;\n  });\n  const [idGenerator, setIdGenerator] = useState(() => {\n    const savedValue = JSON.parse(localStorage.getItem(\"idGenerator\"));\n    const initialValue = accounts.length;\n    return savedValue || initialValue;\n  });\n  const [records, setRecords] = useState(() => {\n    const savedValue = JSON.parse(localStorage.getItem(\"records\"));\n    const initialValue = [];\n    return savedValue || initialValue;\n  });\n  const [recordsIdGenerator, setRecordsIdGenerator] = useState(() => {\n    const savedValue = JSON.parse(localStorage.getItem(\"recordsIdGenerator\"));\n    const initialValue = 0;\n    return savedValue || initialValue;\n  });\n  \n  // pages\n  const [isDashboardOpen, setIsDashboardOpen] = useState(false);\n  const [isAccountsOpen, setIsAccountsOpen] = useState(false);\n  const [isRecordsOpen, setIsRecordsOpen] = useState(false);\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [isSignupOpen, setIsSignupOpen] = useState(false);\n  const [isLandingOpen, setIsLandingOpen] = useState(true);\n\n  // modals\n  const [isAddAccountModalOpen, setIsAddAccountModalOpen] = useState(false);\n  const [isActAccountModalOpen, setIsActAccountModalOpen] = useState(false);\n\n  // TODO: states to move down\n  const [newAccountName, setNewAccountName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newAccountType, setNewAccountType] = useState(\"\");\n  const [newInitialAmount, setNewInitialAmount] = useState(0);\n\n  const [action, setAction] = useState(\"deposit\");\n  const [actAccountName, setActAccountName] = useState(\"\");\n  const [actTransferToAccountName, setActTransferToAccountName] = useState(\"\")\n  const [actDepositAmount, setActDepositAmount] = useState(0);\n  const [actWithdrawAmount, setActWithdrawAmount] = useState(0);\n  const [actTransferAmount, setActTransferAmount] = useState(0);\n\n  // login\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  \n  // local storage\n  useEffect(() => {\n    localStorage.setItem('adminAccounts', JSON.stringify([...adminAccounts]));\n  }, [JSON.stringify(adminAccounts)]);\n\n  useEffect(() => {\n    localStorage.setItem('accounts', JSON.stringify([...accounts]));\n  }, [JSON.stringify(accounts)]);\n\n  useEffect(() => {\n    localStorage.setItem('idGenerator', JSON.stringify(idGenerator));\n  }, [idGenerator]);\n\n  useEffect(() => {\n    localStorage.setItem('records', JSON.stringify([...records]));\n  }, [JSON.stringify(records)]);\n\n  useEffect(() => {\n    localStorage.setItem('recordsIdGenerator', JSON.stringify(recordsIdGenerator));\n  }, [recordsIdGenerator]);\n\n\n  // render page\n  return (\n    <>\n      <header>\n        {/* turn into component */}\n        <NavBar\n          isDashboardOpen={isDashboardOpen}\n          setIsDashboardOpen={setIsDashboardOpen}\n\n          isAccountsOpen={isAccountsOpen}\n          setIsAccountsOpen={setIsAccountsOpen}\n\n          isRecordsOpen={isRecordsOpen}\n          setIsRecordsOpen={setIsRecordsOpen}\n\n          isLoginOpen={isLoginOpen}\n          setIsLoginOpen={setIsLoginOpen}\n\n          isSignupOpen={isSignupOpen}\n          setIsSignupOpen={setIsSignupOpen}\n\n          isLandingOpen={isLandingOpen}\n          setIsLandingOpen={setIsLandingOpen}\n\n          loggedIn={loggedIn}\n          setLoggedIn={setLoggedIn}\n\n          loggedInUser={loggedInUser}\n          setLoggedInUser={setLoggedInUser}\n\n          adminAccounts={adminAccounts}\n        />\n      </header>\n      <main className=\"pt-14\">\n        \n        {isDashboardOpen &&\n          <DashboardPage isDashboardOpen={isDashboardOpen} />\n        }\n\n        {isAccountsOpen && \n          <AccountsPage\n          isAccountsOpen={isAccountsOpen}\n\n          accounts={accounts}\n          setAccounts={setAccounts}\n          idGenerator={idGenerator}\n          setIdGenerator={setIdGenerator}\n          records={records}\n          setRecords={setRecords}\n          recordsIdGenerator={recordsIdGenerator}\n          setRecordsIdGenerator={setRecordsIdGenerator}\n\n          newAccountName={newAccountName}\n          setNewAccountName={setNewAccountName}\n          newEmail={newEmail}\n          setNewEmail={setNewEmail}\n          newAccountType={newAccountType}\n          setNewAccountType={setNewAccountType}\n          newInitialAmount={newInitialAmount}\n          setNewInitialAmount={setNewInitialAmount}\n\n          isAddAccountModalOpen={isAddAccountModalOpen}\n          setIsAddAccountModalOpen={setIsAddAccountModalOpen}\n          isActAccountModalOpen={isActAccountModalOpen}\n          setIsActAccountModalOpen={setIsActAccountModalOpen}\n\n          action={action}\n          setAction={setAction}\n          actAccountName={actAccountName}\n          setActAccountName={setActAccountName}\n          actTransferToAccountName={actTransferToAccountName}\n          setActTransferToAccountName={setActTransferToAccountName}\n          actDepositAmount={actDepositAmount}\n          setActDepositAmount={setActDepositAmount}\n          actWithdrawAmount={actWithdrawAmount}\n          setActWithdrawAmount={setActWithdrawAmount}\n          actTransferAmount={actTransferAmount}\n          setActTransferAmount={setActTransferAmount}\n        />\n        }\n        {isRecordsOpen &&\n          <RecordsPage\n            isRecordsOpen={isRecordsOpen}\n\n            accounts={accounts}\n            setAccounts={setAccounts}\n            idGenerator={idGenerator}\n            setIdGenerator={setIdGenerator}\n            records={records}\n            setRecords={setRecords}\n            recordsIdGenerator={recordsIdGenerator}\n            setRecordsIdGenerator={setRecordsIdGenerator}\n\n            isActAccountModalOpen={isActAccountModalOpen}\n            setIsActAccountModalOpen={setIsActAccountModalOpen}\n  \n            action={action}\n            setAction={setAction}\n            actAccountName={actAccountName}\n            setActAccountName={setActAccountName}\n            actTransferToAccountName={actTransferToAccountName}\n            setActTransferToAccountName={setActTransferToAccountName}\n            actDepositAmount={actDepositAmount}\n            setActDepositAmount={setActDepositAmount}\n            actWithdrawAmount={actWithdrawAmount}\n            setActWithdrawAmount={setActWithdrawAmount}\n            actTransferAmount={actTransferAmount}\n            setActTransferAmount={setActTransferAmount}\n          />\n        }\n        {isLoginOpen &&\n          <LoginPage\n            setIsLoginOpen={setIsLoginOpen}\n            setIsSignupOpen={setIsSignupOpen}\n            setIsDashboardOpen={setIsDashboardOpen}\n            setIsAccountsOpen={setIsAccountsOpen}\n            setIsRecordsOpen={setIsRecordsOpen}\n\n            adminAccounts={adminAccounts}\n            setAdminAccounts={setAdminAccounts}\n            loggedIn={loggedIn}\n            setLoggedIn={setLoggedIn}\n            loggedInUser={loggedInUser}\n            setLoggedInUser={setLoggedInUser}\n          />\n        }\n        {isSignupOpen &&\n          <SignUpPage\n            setIsLoginOpen={setIsLoginOpen}\n            setIsSignupOpen={setIsSignupOpen}\n            setIsDashboardOpen={setIsDashboardOpen}\n            setIsAccountsOpen={setIsAccountsOpen}\n            setIsRecordsOpen={setIsRecordsOpen}\n\n            adminAccounts={adminAccounts}\n            setAdminAccounts={setAdminAccounts}\n            loggedIn={loggedIn}\n            setLoggedIn={setLoggedIn}\n            loggedInUser={loggedInUser}\n            setLoggedInUser={setLoggedInUser}\n          />\n        }\n\n        {isLandingOpen &&\n          <LandingPage\n            setIsLandingOpen={setIsLandingOpen}\n            setIsLoginOpen={setIsLoginOpen}\n            setIsSignupOpen={setIsSignupOpen}\n          />\n        }\n\n        \n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}